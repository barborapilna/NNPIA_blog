{"version":3,"sources":["components/About.js","components/Comment.js","service/AuthService.js","components/MyNavbar.js","components/Home.js","service/AuthContext.js","components/Login.js","components/ResponsePage.js","components/Post.js","components/PostList.js","components/PostForm.js","components/Register.js","components/UserProfile.js","components/UserForm.js","service/PrivateRoute.js","App.js","reportWebVitals.js","index.js"],"names":["About","className","Comment","props","comment","id","userName","body","CustomComment","text","jwt_decode","localStorage","getItem","sub","Button","variant","onClick","removeComment","a","reqBody","request","url","process","method","headers","Headers","JSON","stringify","fetch","then","response","json","ok","Promise","reject","result","history","push","pathname","state","message","title","catch","Card","Body","USER_API_BASE_URL","WEB_ADDRESS","AuthService","isLoggedIn","login","credentials","axios","post","setUserInfo","value","setItem","getUserInfo","parse","getUserIdUser","userInfo","getUserRole","role","getAuthHeader","Authorization","this","token","logOut","MyNavbar","navItems","useHistory","Nav","Link","href","to","postID","logoutMethod","bind","Navbar","bg","Brand","Home","AuthContext","createContext","getUser","AuthProvider","children","removeTokens","removeItem","setState","status","error","user","authTokens","setTokens","useState","setAuthTokens","data","useEffect","Provider","useAuth","useContext","isPending","isError","isSuccess","isAuthenticated","Login","setLoggedIn","setIsError","setData","handleInputChange","event","target","type","checked","name","onSubmit","e","preventDefault","Error","statusText","err","onChange","ResponsePage","location","FormComment","addComment","React","setValue","Form","Group","Control","placeholder","Post","postId","setPost","comments","setComments","getComments","requestComments","requestPost","openLinkEdit","removePost","Table","responsive","borderless","renderPostOptions","commentsList","forEach","renderComments","PostList","postList","setPostList","openLink","postLinks","Header","Text","substring","renderAvailableLinks","PostForm","setTitle","setBody","setPostId","class","addPost","editPost","Label","as","rows","Register","username","setUsername","password","setPassword","firstName","setFirstName","lastName","setLastName","alert","UserProfile","setUser","userID","renderUserOptions","UserForm","setFistName","userId","setUserId","editUser","PrivateRoute","Component","component","rest","render","from","App","path","loginMethod","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5297a351.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function About() {\r\n    return (\r\n        <div>\r\n            <br/>\r\n            <h2 className=\"h1\">About</h2>\r\n            <div>\r\n                Welcome to multi-tenant blog application.\r\n                <br/>\r\n                <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Etiam quis quam. Sed\r\n                    vel lectus. Donec odio tempus molestie, porttitor ut, iaculis quis, sem. Donec quis nibh at felis\r\n                    congue commodo. Nam sed tellus id magna elementum tincidunt. Vestibulum erat nulla, ullamcorper nec,\r\n                    rutrum non, nonummy ac, erat. Class aptent taciti sociosqu ad litora torquent per conubia nostra,\r\n                    per inceptos hymenaeos. Pellentesque ipsum. Integer rutrum, orci vestibulum ullamcorper ultricies,\r\n                    lacus quam ultricies odio, vitae placerat pede sem sit amet enim. Etiam neque. Nullam faucibus mi\r\n                    quis velit. Phasellus faucibus molestie nisl. Itaque earum rerum hic tenetur a sapiente delectus, ut\r\n                    aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat.\r\n                    Aliquam erat volutpat. Nulla pulvinar eleifend sem. Fusce aliquam vestibulum ipsum. Nullam justo\r\n                    enim, consectetuer nec, ullamcorper ac, vestibulum in, elit.</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {Button, Card} from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst Comment = ({props, comment}) => {\r\n    const {id, userName, body} = comment || {};\r\n\r\n    const CustomComment = ({userName, text}) => {\r\n        if (jwt_decode(localStorage.getItem('tokens')).sub === userName) {\r\n            return (\r\n                <div className=\"commentCard\">\r\n                    <span>{text}</span>\r\n                    <div>\r\n                        <Button variant=\"outline-danger\" onClick={() => removeComment(id)}>✕</Button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className=\"commentCard\">\r\n                    <span>{text}</span>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const removeComment = async (id) => {\r\n        const reqBody = {\r\n            id: id\r\n        };\r\n\r\n        const request = ({\r\n            url: process.env.REACT_APP_BASE_URI + '/comment/' + id,\r\n            method: 'DELETE',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('tokens')\r\n            }),\r\n            body: JSON.stringify(reqBody)\r\n        });\r\n\r\n        await fetch(request.url, request)\r\n            .then(response =>\r\n                response.json().then(json => {\r\n                    if (!response.ok) {\r\n                        return Promise.reject(json)\r\n                    }\r\n                    return json\r\n                })\r\n            )\r\n            .then(result => {\r\n                props.history.push({\r\n                    pathname: '/response',\r\n                    state: {message: \"Success!\", title: result.message}\r\n                });\r\n            })\r\n            .catch(result => {\r\n                props.history.push({\r\n                    pathname: '/response',\r\n                    state: {title: \"ERROR!\", message: \"Something went wrong.\"}\r\n                });\r\n            })\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"container\">\r\n                <div>\r\n                    <Card>\r\n                        <br/>\r\n                        <h6 className=\"mt-0 mb-1 text-muted\">Author: {userName}</h6>\r\n                        <hr/>\r\n                        <Card.Body>\r\n                            <CustomComment userName={userName} text={body}/>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                <br/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Comment;","import axios from 'axios';\r\nimport {WEB_ADDRESS} from \"../components/Constants\";\r\n\r\nconst USER_API_BASE_URL = WEB_ADDRESS + 'token/';\r\n\r\nconst AuthService = {\r\n\r\n    isLoggedIn: function(){\r\n        return !!localStorage.getItem(\"tokens\"); // vrati true kdyz je token nastaven\r\n    },\r\n\r\n    login: function(credentials) {\r\n        return axios.post(USER_API_BASE_URL + \"generate-token\", credentials);\r\n    },\r\n\r\n    setUserInfo: function(value) {\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(value));\r\n    },\r\n\r\n    getUserInfo: function() {\r\n        return JSON.parse(localStorage.getItem(\"userInfo\"));\r\n    },\r\n\r\n    getUserIdUser: function() {\r\n        let userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n        return userInfo != null ? userInfo.id : userInfo;\r\n    },\r\n\r\n    getUserRole: function() {\r\n        let userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n        return userInfo != null ? userInfo.role : userInfo;\r\n    },\r\n\r\n    getAuthHeader: function() {\r\n        return {headers: {Authorization: 'Bearer ' + this.getUserInfo().token}};\r\n    },\r\n\r\n    logOut: function() {\r\n        return axios.post(USER_API_BASE_URL + 'logout', {}, this.getAuthHeader());\r\n    },\r\n\r\n};\r\n\r\nexport default  AuthService;","import React from 'react';\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {Link} from 'react-router-dom';\r\nimport AuthService from \"../service/AuthService\";\r\n\r\nexport default function MyNavbar(props) {\r\n    var navItems = [];\r\n\r\n    const history = useHistory();\r\n\r\n    const isLoggedIn = AuthService.isLoggedIn();\r\n\r\n    navItems.push(<li className=\"nav-item\">\r\n        <Nav.Link href=\"/#/home\">Home</Nav.Link>\r\n    </li>);\r\n\r\n    navItems.push(<li className=\"nav-item\">\r\n        <Nav.Link href=\"/#/about\">About</Nav.Link>\r\n    </li>);\r\n\r\n    if (!isLoggedIn) {\r\n        navItems.push(<li className=\"nav-item\">\r\n            <Nav.Link href=\"/#/login\">Login</Nav.Link>\r\n        </li>);\r\n\r\n        navItems.push(<li className=\"nav-item\">\r\n            <Nav.Link href=\"/#/register\">Register</Nav.Link>\r\n        </li>);\r\n    } else {\r\n        navItems.push(<li className=\"nav-item\">\r\n            <Nav.Link href=\"/#/post-list\">Posts</Nav.Link>\r\n        </li>);\r\n\r\n        navItems.push(<li className=\"nav-item\">\r\n            <Link to={{pathname: \"/add/post\", state: {postID: -1}}} >\r\n                <Nav.Link href=\"/add/post\">Create post</Nav.Link>\r\n            </Link>\r\n        </li>);\r\n\r\n        navItems.push(<li className=\"nav-item\">\r\n            <Nav.Link href=\"/#/user-profile\">My profile</Nav.Link>\r\n        </li>);\r\n\r\n        navItems.push(<li className=\"nav-item\">\r\n            <Nav.Link onClick={props.logoutMethod.bind(null, history)}>Logout</Nav.Link>\r\n        </li>);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand href=\"/#/home\">My Blog</Navbar.Brand>\r\n                <Nav className=\"mr-auto\">\r\n                    <ul className=\"nav\">\r\n                        {navItems}\r\n                    </ul>\r\n                </Nav>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div>\r\n            <br/>\r\n            <h2>Home Page</h2>\r\n            <div>\r\n                <br/>\r\n                You must Register and Log-in to use this application properly.\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport {createContext, useContext, useEffect, useState} from 'react';\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nfunction getUser(token) {\r\n    (token && jwt_decode(token))\r\n}\r\n\r\nfunction AuthProvider({children}) {\r\n\r\n    const removeTokens = () => {\r\n        localStorage.removeItem(\"tokens\");\r\n\r\n        setState({\r\n            status: 'success',\r\n            error: null,\r\n            user: null,\r\n            token: authTokens,\r\n            setTokens,\r\n            removeTokens\r\n        })\r\n    }\r\n\r\n    const [authTokens, setAuthTokens] = useState();\r\n\r\n    const [state, setState] = useState({\r\n        status: 'pending'\r\n    })\r\n\r\n    const setTokens = (data) => {\r\n        localStorage.setItem(\"tokens\", data);\r\n        setAuthTokens(data);\r\n        const user = getUser(data);\r\n        setState({\r\n\r\n                status: 'success',\r\n                error: null,\r\n                user: user,\r\n                token: data,\r\n                setTokens,\r\n                removeTokens\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        const user = getUser(localStorage.getItem(\"tokens\"));\r\n        setState({\r\n                status: 'success',\r\n                error: null,\r\n                user: user,\r\n                token: localStorage.getItem(\"tokens\"),\r\n                setTokens,\r\n                removeTokens\r\n            }\r\n        );\r\n    }, [])\r\n\r\n    return (\r\n        <AuthContext.Provider value={state}>\r\n            {state.status === 'pending' ? (\r\n                'Loading...'\r\n            ) : state.status === 'error' ? (\r\n                <div>\r\n                    Oh no\r\n                    <div>\r\n                        <pre>{state.error.message}</pre>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                children\r\n            )}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nfunction useAuth() {\r\n    const state = useContext(AuthContext)\r\n    const isPending = state.status === 'pending'\r\n    const isError = state.status === 'error'\r\n    const isSuccess = state.status === 'success'\r\n    const isAuthenticated = state.user && isSuccess\r\n    return {\r\n        ...state,\r\n        isPending,\r\n        isError,\r\n        isSuccess,\r\n        isAuthenticated,\r\n    }\r\n}\r\n\r\nexport {AuthProvider, useAuth, getUser}","import {Redirect} from \"react-router-dom\";\r\nimport {useAuth} from \"../service/AuthContext\";\r\nimport React, {useState} from 'react';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default function Login(props) {\r\n\r\n    const [isLoggedIn, setLoggedIn] = useState(false);\r\n    const [isError, setIsError] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const {setTokens} = useAuth();\r\n\r\n    const handleInputChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        data[name] = value;\r\n        setData({...data});\r\n    };\r\n\r\n    function postLogin(e) {\r\n        e.preventDefault()\r\n\r\n        fetch(process.env.REACT_APP_BASE_URI + '/authenticate',\r\n            {\r\n                method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n            })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response.json()\r\n                }\r\n                throw new Error(`Unable to get data: ${response.statusText}`)\r\n            })\r\n            .then(json => {\r\n                setTokens(json.token);\r\n                setLoggedIn(true);\r\n            })\r\n            .catch((err) => {\r\n                setIsError(err.message)\r\n            })\r\n    }\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to=\"/about\"/>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <br/>\r\n            <h1>Log in form</h1>\r\n            <hr/>\r\n            <form onSubmit={postLogin}>\r\n                <div>\r\n                    <label>User name</label>\r\n                    <br/>\r\n                    <input type={\"text\"} name={\"username\"} onChange={handleInputChange}/>\r\n                </div>\r\n                <br/>\r\n                <div>\r\n                    <label>Password</label>\r\n                    <br/>\r\n                    <input type={\"password\"} name={\"password\"} onChange={handleInputChange}/>\r\n                </div>\r\n                <br/>\r\n                <Button variant=\"primary\" type=\"submit\">Login</Button>\r\n                {isError}\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nexport default function ResponsePage(props) {\r\n    return (\r\n        <div>\r\n            <br/>\r\n            <h2>{props.location.state.title}</h2>\r\n            <div>\r\n                {props.location.state.message}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport Comment from \"./Comment\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {Form} from \"react-bootstrap\";\r\n\r\nfunction FormComment({addComment}) {\r\n    const [value, setValue] = React.useState(\"\");\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (!value) return;\r\n        addComment(value);\r\n        setValue(\"\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"col-xs-1 col-sm-9 center\">\r\n            <br/>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group>\r\n                    <Form.Control type=\"text\" className=\"input\" value={value} onChange={e => setValue(e.target.value)}\r\n                                  placeholder=\"Write comment\"/>\r\n                </Form.Group>\r\n                <Button variant=\"primary mb-3\" type=\"submit\">\r\n                    Add comment\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Post(props) {\r\n    const postId = props.location.state.postID;\r\n    const [post, setPost] = useState([]);\r\n    const [comments, setComments] = useState([]);\r\n\r\n\r\n    const getComments = async () => {\r\n        const requestComments = ({\r\n            url: process.env.REACT_APP_BASE_URI + '/comments/' + postId,\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('tokens')\r\n            })\r\n        });\r\n\r\n        await fetch(requestComments.url, requestComments)\r\n            .then(response =>\r\n                response.json().then(json => {\r\n                    if (!response.ok) {\r\n                        return Promise.reject(json)\r\n                    }\r\n\r\n                    return json\r\n                })\r\n            )\r\n            .then(result => {\r\n                setComments(result);\r\n            })\r\n    }\r\n\r\n    useEffect(async () => {\r\n        const requestPost = ({\r\n            url: process.env.REACT_APP_BASE_URI + '/post/' + postId,\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('tokens')\r\n            })\r\n        });\r\n\r\n        await fetch(requestPost.url, requestPost)\r\n            .then(response =>\r\n                response.json().then(json => {\r\n                    if (!response.ok) {\r\n                        return Promise.reject(json)\r\n                    }\r\n\r\n                    return json\r\n                })\r\n            )\r\n            .then(result => {\r\n                setPost(result);\r\n            });\r\n\r\n      getComments();\r\n    }, []);\r\n\r\n    const renderComments = (comments) => {\r\n        const commentsList = [];\r\n        comments.forEach((comment) => {\r\n            const {id} = comment;\r\n            commentsList.push(<Comment props={props} comment={comment} id={id}/>)\r\n        });\r\n        return commentsList;\r\n    };\r\n\r\n    const renderPostOptions = (userName) => {\r\n        if (jwt_decode(localStorage.getItem('tokens')).sub === userName) {\r\n            return (\r\n                <div>\r\n                    <Table responsive borderless>\r\n                        <thead>\r\n                        <tr>\r\n                            <th><Button variant=\"primary\" onClick={openLinkEdit}>Edit post</Button></th>\r\n                            <th><Button variant=\"primary\" onClick={() => removePost(id)}>Delete post</Button></th>\r\n                        </tr>\r\n                        </thead>\r\n                    </Table>\r\n                </div>\r\n            )\r\n        }\r\n    };\r\n\r\n    const openLinkEdit = () => {\r\n        props.history.push({\r\n            pathname: '/add/post',\r\n            state: {postID: post.id}\r\n        })\r\n    };\r\n\r\n    const removePost = async (id) => {\r\n        const reqBody = {\r\n            id: id\r\n        };\r\n\r\n        const request = ({\r\n            url: process.env.REACT_APP_BASE_URI + '/post/' + id,\r\n            method: 'DELETE',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('tokens')\r\n            }),\r\n            body: JSON.stringify(reqBody)\r\n        });\r\n\r\n        await fetch(request.url, request)\r\n            .then(response =>\r\n                response.json().then(json => {\r\n                    if (!response.ok) {\r\n                        return Promise.reject(json)\r\n                    }\r\n                    return json\r\n                })\r\n            )\r\n            .then(result => {\r\n                props.history.push({\r\n                    pathname: '/response',\r\n                    state: {message: \"Success!\", title: result.message}\r\n                });\r\n            })\r\n            .catch(result => {\r\n                props.history.push({\r\n                    pathname: '/response',\r\n                    state: {title: \"ERROR!\", message: \"Something went wrong.\"}\r\n                });\r\n            })\r\n    };\r\n\r\n    const addComment = text => {\r\n        if (text !== \"\") {\r\n            const reqBody = {\r\n                body: text,\r\n                postId: props.location.state.postID\r\n            };\r\n\r\n            const request = ({\r\n                url: process.env.REACT_APP_BASE_URI + '/comment',\r\n                method: 'POST',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('tokens')\r\n                }),\r\n                body: JSON.stringify(reqBody)\r\n            });\r\n\r\n            fetch(request.url, request)\r\n                .then(response =>\r\n                    response.json().then(json => {\r\n                        if (!response.ok) {\r\n                            return Promise.reject(json)\r\n                        }\r\n\r\n                        return json\r\n                    })\r\n                )\r\n                .then(result => {\r\n                    getComments();\r\n                    // window.location.reload();\r\n                })\r\n        }\r\n    };\r\n\r\n    const {id, userName, title, body} = post;\r\n\r\n    return (\r\n        <div id={id} className=\"text-center\">\r\n            <br/>\r\n            <h1>{title}</h1>\r\n            <br/>\r\n            <small>Author: {userName}</small>\r\n            <div>{body}</div>\r\n            <br/>\r\n            <div>\r\n                {renderPostOptions(userName)}\r\n            </div>\r\n            <hr/>\r\n            <div>\r\n                {renderComments(comments ? comments : [])}\r\n            </div>\r\n            <br/>\r\n            <FormComment addComment={addComment}/>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nexport default function PostList(props) {\r\n    const [postList, setPostList] = useState([]);\r\n\r\n    useEffect(async () => {\r\n        const request = ({\r\n            url: process.env.REACT_APP_BASE_URI + '/post/getAll',\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('tokens')\r\n            })\r\n        });\r\n\r\n        await fetch(request.url, request)\r\n            .then(response =>\r\n                response.json().then(json => {\r\n                    if (!response.ok) {\r\n                        return Promise.reject(json)\r\n                    }\r\n\r\n                    return json\r\n                })\r\n            )\r\n            .then(result => {\r\n                setPostList(result);\r\n            })\r\n    }, [])\r\n\r\n    const renderAvailableLinks = (postList) => {\r\n        const postLinks = [];\r\n\r\n        postList.forEach((post) => {\r\n            const {id, title, body}  = post;\r\n            postLinks.push(\r\n                <div>\r\n                    <Card id={id} className=\"text-center\">\r\n                        <Card.Header>{title}</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>{body.substring(0,500) + \"...\"}</Card.Text>\r\n                            <Button variant=\"primary\" onClick={() => openLink(id)}>Read</Button>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <br/>\r\n                    <br/>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return postLinks;\r\n    };\r\n\r\n    const openLink = (postId) => {\r\n        props.history.push({\r\n            pathname: '/post/' + postId,\r\n            state: {postID: postId}\r\n        })\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <br/>\r\n            <h1>Posts:</h1>\r\n            <br/>\r\n            <ul>\r\n                {renderAvailableLinks(postList)}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nexport default function PostForm(props) {\r\n\r\n    const [title, setTitle] = useState([]);\r\n    const [body, setBody] = useState([]);\r\n    const [postId, setPostId] = useState(null);\r\n\r\n    useEffect(async () => {\r\n        setPostId(props.location.state.postID);\r\n\r\n        if (props.location.state.postID !== -1){\r\n            const request = ({\r\n                url: process.env.REACT_APP_BASE_URI + '/post/' + props.location.state.postID,\r\n                method: 'GET',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('tokens')\r\n                })\r\n            });\r\n\r\n            await fetch(request.url, request)\r\n                .then(response =>\r\n                    response.json().then(json => {\r\n                        if (!response.ok) {\r\n                            return Promise.reject(json)\r\n                        }\r\n\r\n                        return json\r\n                    })\r\n                )\r\n                .then(result => {\r\n                    setTitle(result.title);\r\n                    setBody(result.body);\r\n                })\r\n        }\r\n    }, [])\r\n\r\n    const addPost = () => {\r\n        const reqBody = {\r\n            title: title,\r\n            body: body,\r\n        };\r\n\r\n        const request = ({\r\n            url: process.env.REACT_APP_BASE_URI + '/post',\r\n            method:'POST',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('tokens')\r\n            }),\r\n            body: JSON.stringify(reqBody)\r\n        });\r\n\r\n        fetch(request.url, request)\r\n            .then(response =>\r\n                response.json().then(json => {\r\n                    if (!response.ok) {\r\n                        return Promise.reject(json)\r\n                    }\r\n\r\n                    return json\r\n                })\r\n            )\r\n            .then(result => {\r\n                props.history.push({\r\n                    pathname: '/response',\r\n                    state: {message: \"Success!\", title: result.message}\r\n                });\r\n            })\r\n    };\r\n\r\n    const editPost = () => {\r\n        const reqBody = {\r\n            id: postId,\r\n            title: title,\r\n            body: body,\r\n        };\r\n\r\n        // alert(postId)\r\n\r\n        const request = ({\r\n            url: process.env.REACT_APP_BASE_URI + '/post/' + postId,\r\n            method: 'PUT',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('tokens')\r\n            }),\r\n            body: JSON.stringify(reqBody)\r\n        });\r\n\r\n        fetch(request.url, request)\r\n            .then(response =>\r\n                response.json().then(json => {\r\n                    if (!response.ok) {\r\n                        return Promise.reject(json)\r\n                    }\r\n\r\n                    return json\r\n                })\r\n            )\r\n            .then(result => {\r\n                props.history.push({\r\n                    pathname: '/response',\r\n                    state: {message: \"Success!\", title: result.message}\r\n                });\r\n            })\r\n    };\r\n\r\n\r\n    const sendPost = (e) => {\r\n        e.preventDefault();\r\n        // alert(postId)\r\n\r\n        if (postId === -1) {\r\n            addPost();\r\n        } else {\r\n            editPost();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div class=\"col-xs-1 col-sm-8 center\">\r\n            <br/>\r\n            <h1>Add / Edit a post</h1>\r\n            <hr/>\r\n\r\n            <Form onSubmit={sendPost}>\r\n                <Form.Group>\r\n                    <Form.Label>Post title</Form.Label>\r\n                    <Form.Control type=\"title\" className=\"form-control\" value={title} onChange={(e) => {\r\n                        setTitle(e.target.value)\r\n                    }}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Write here</Form.Label>\r\n                    <Form.Control as=\"textarea\" rows={20} value={body} onChange={(e) => {\r\n                        setBody(e.target.value)\r\n                    }}/>\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nexport default function Register(props) {\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n\r\n\r\n    function postRegister(e) {\r\n        e.preventDefault()\r\n\r\n        const reqBody = {\r\n            username: username,\r\n            password: password,\r\n            firstName: firstName,\r\n            lastName: lastName\r\n\r\n        };\r\n\r\n        const request = ({\r\n            url: process.env.REACT_APP_BASE_URI + '/registration',\r\n            method: 'POST',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n            }),\r\n            body: JSON.stringify(reqBody)\r\n        });\r\n\r\n        fetch(request.url, request)\r\n            .then(response =>\r\n                response.json().then(json => {\r\n                    if (!response.ok) {\r\n                        return Promise.reject(json)\r\n                    }\r\n\r\n                    return json\r\n                })\r\n            )\r\n            .then(result => {\r\n                props.history.push({\r\n                    pathname: '/login',\r\n                    state: {message: \"Success!\", title: result.message}\r\n                });\r\n            })\r\n            .catch(result => {\r\n                alert(result.message)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-xs-1 col-sm-4 center\">\r\n            <h1>Register form</h1>\r\n            <hr/>\r\n            <Form onSubmit={postRegister}>\r\n                <Form.Group>\r\n                    <Form.Label>User name</Form.Label>\r\n                    <Form.Control type=\"username\" placeholder=\"Enter username\" value={username}\r\n                                  onChange={(e) => setUsername(e.target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Enter password\" value={password}\r\n                                  onChange={(e) => setPassword(e.target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>First name</Form.Label>\r\n                    <Form.Control type=\"firstName\" placeholder=\"Enter first name\" value={firstName}\r\n                                  onChange={(e) => setFirstName(e.target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Last name</Form.Label>\r\n                    <Form.Control type=\"LastName\" placeholder=\"Enter last name\" value={lastName}\r\n                                  onChange={(e) => setLastName(e.target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\">Register</Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport default function UserProfile(props) {\r\n    const [user, setUser] = useState([]);\r\n\r\n    useEffect(async () => {\r\n        const request = ({\r\n            url: process.env.REACT_APP_BASE_URI + '/user/' + jwt_decode(localStorage.getItem('tokens')).sub,\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('tokens')\r\n            })\r\n        });\r\n\r\n        await fetch(request.url, request)\r\n            .then(response =>\r\n                response.json().then(json => {\r\n                    if (!response.ok) {\r\n                        return Promise.reject(json)\r\n                    }\r\n\r\n                    return json\r\n                })\r\n            )\r\n            .then(result => {\r\n                setUser(result);\r\n            })\r\n    }, [])\r\n\r\n    const renderUserOptions = (userName) => {\r\n        if (jwt_decode(localStorage.getItem('tokens')).sub === userName) {\r\n            return (\r\n                <div>\r\n                    <Button variant=\"primary\" onClick={openLinkEdit}>Edit profile</Button>\r\n                </div>\r\n            )\r\n        }\r\n    };\r\n\r\n    const openLinkEdit = () => {\r\n        props.history.push({\r\n            pathname: '/edit/user',\r\n            state: {userID: user.id}\r\n        })\r\n    };\r\n\r\n    const {username, firstName, lastName} = user;\r\n\r\n    return (\r\n        <div>\r\n            <br/>\r\n            <h1>Your profile</h1>\r\n            <br/>\r\n            <br/>\r\n            <h5 class=\"absolute\">Username:&emsp;&emsp;{username}</h5>\r\n            <br/>\r\n            <br/>\r\n            <h5 class=\"absolute\">Fist name:&nbsp;&emsp;&emsp;{firstName}</h5>\r\n            <br/>\r\n            <br/>\r\n            <h5 class=\"absolute\">Last name:&emsp;&emsp;{lastName}</h5>\r\n            <br/>\r\n            <br/>\r\n            {renderUserOptions(jwt_decode(localStorage.getItem('tokens')).sub)}\r\n        </div>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport default function UserForm(props) {\r\n\r\n    const [user, setUser] = useState([]);\r\n    const [firstName, setFistName] = useState([]);\r\n    const [lastName, setLastName] = useState([]);\r\n    const [userId, setUserId] = useState(null);\r\n\r\n    useEffect(async () => {\r\n        setUserId(props.location.state.userID);\r\n\r\n        const request = ({\r\n            url: process.env.REACT_APP_BASE_URI + '/user/' + jwt_decode(localStorage.getItem('tokens')).sub,\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('tokens')\r\n            })\r\n        });\r\n\r\n        await fetch(request.url, request)\r\n            .then(response =>\r\n                response.json().then(json => {\r\n                    if (!response.ok) {\r\n                        return Promise.reject(json)\r\n                    }\r\n\r\n                    return json\r\n                })\r\n            )\r\n            .then(result => {\r\n                setUser(result)\r\n                // setUsername(result.username);\r\n                // setFistName(result.firstName);\r\n                // setLastName(result.lastName);\r\n            })\r\n    }, [])\r\n\r\n    const editUser = () => {\r\n        const reqBody = {\r\n            id: userId,\r\n            username: user.username,\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            password: \"fake\"\r\n        };\r\n\r\n        // alert(postId)\r\n\r\n        const request = ({\r\n            url: process.env.REACT_APP_BASE_URI + '/user/' + userId,\r\n            method: 'PUT',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('tokens')\r\n            }),\r\n            body: JSON.stringify(reqBody)\r\n        });\r\n\r\n        fetch(request.url, request)\r\n            .then(response =>\r\n                response.json().then(json => {\r\n                    if (!response.ok) {\r\n                        return Promise.reject(json)\r\n                    }\r\n                    return json\r\n                })\r\n            )\r\n            .then(result => {\r\n                props.history.push({\r\n                    pathname: '/response',\r\n                    state: {message: \"Success!\", title: result.message}\r\n                });\r\n            })\r\n    };\r\n\r\n\r\n    const sendUser = (e) => {\r\n        e.preventDefault();\r\n        editUser();\r\n    };\r\n\r\n    return (\r\n        <div class=\"col-xs-1 col-sm-4 center\">\r\n            <br/>\r\n            <h1>Edit your profile</h1>\r\n            <hr/>\r\n\r\n            <Form onSubmit={sendUser}>\r\n                <Form.Group>\r\n                    <Form.Label>User name : {user.username}</Form.Label>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>First name</Form.Label>\r\n                    <Form.Control type=\"title\" className=\"form-control\" value={firstName} onChange={(e) => {\r\n                        setFistName(e.target.value)\r\n                    }}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Last name</Form.Label>\r\n                    <Form.Control type=\"title\" className=\"form-control\" value={lastName} onChange={(e) => {\r\n                        setLastName(e.target.value)\r\n                    }}/>\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import { Redirect, Route } from 'react-router-dom'\r\nimport AuthService from \"./AuthService\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n    const isLoggedIn = AuthService.isLoggedIn()\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props =>\r\n                isLoggedIn ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                    <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n                )\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default PrivateRoute","import './App.css';\nimport {HashRouter, Switch, Route} from \"react-router-dom\";\nimport About from \"./components/About\";\nimport Comment from \"./components/Comment\";\nimport React, {useState} from \"react\";\nimport MyNavbar from \"./components/MyNavbar\";\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport ResponsePage from \"./components/ResponsePage\";\nimport Post from \"./components/Post\";\nimport PostList from \"./components/PostList\";\nimport PostForm from \"./components/PostForm\";\nimport {useAuth} from \"./service/AuthContext\";\nimport Register from \"./components/Register\";\nimport UserProfile from \"./components/UserProfile\";\nimport UserForm from \"./components/UserForm\";\nimport PrivateRoute from \"./service/PrivateRoute\";\n\nfunction App() {\n    const {removeTokens} = useAuth()\n    const [isLoggedIn, setLoggedIn] = useState(false);\n\n    const userLogOut = (setLoggedIn, history) => {\n        setLoggedIn(false);\n        removeTokens();\n        history.push(\"/\");\n    };\n\n    return (\n        <HashRouter>\n            <div className=\"App\">\n\n                <MyNavbar isLoggedIn={isLoggedIn} logoutMethod={userLogOut.bind(null, setLoggedIn)}/>\n\n                <Switch>\n                    <Route path=\"/login\">\n                        <Login loginMethod={setLoggedIn}/>\n                    </Route>\n\n                    <PrivateRoute path=\"/comment\" component={Comment}/>\n                    <PrivateRoute path=\"/post-list\" component={PostList}/>\n                    <PrivateRoute path=\"/post/:postId\" component={Post}/>\n                    <PrivateRoute path=\"/add/post\" component={PostForm}/>\n                    <PrivateRoute path=\"/response\" component={ResponsePage}/>\n                    <PrivateRoute path=\"/user-profile\" component={UserProfile}/>\n                    <PrivateRoute path=\"/edit/user\" component={UserForm}/>\n\n                    <Route path=\"/about\" component={About}/>\n                    <Route path=\"/register\" component={Register}/>\n                    <Route path=\"/\" component={Home}/>\n\n                </Switch>\n            </div>\n        </HashRouter>\n    );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {AuthProvider} from \"./service/AuthContext\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <AuthProvider>\n            <App/>\n        </AuthProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}